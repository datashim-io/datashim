{{- $csiS3Properties := merge .Values $.Values.global}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-s3
  labels:
  {{- include "common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-s3
  labels:
  {{- include "common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "update"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update","create"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-s3
  labels:
  {{- include "common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: csi-s3
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: csi-s3
  apiGroup: rbac.authorization.k8s.io
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-s3
  labels:
  {{- include "common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: csi-s3
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app: csi-s3
    spec:
      serviceAccountName: csi-s3
      {{- if or (.Values.dockerRegistrySecret) (.Values.global.dockerRegistrySecret) }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecret | default .Values.global.dockerRegistrySecret }}
      {{- end}}
      containers:
        - name: driver-registrar
          {{- with $csiS3Properties.sidecars}}
          image: "{{ .baseRepo }}/{{ .images.nodeDriverRegistrar.image }}:{{ .images.nodeDriverRegistrar.tag }}"
          {{- end}}
          imagePullPolicy: Always
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path={{ $csiS3Properties.sidecars.kubeletPath }}/plugins/csi-s3/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: false
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
        - name: csi-s3
          image: "{{ $csiS3Properties.baseRepo }}/{{ $csiS3Properties.csis3.image }}:{{ $csiS3Properties.csis3.tag }}"
          imagePullPolicy: Always
          args:
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: cheap
              value: "off"
          securityContext:
            privileged: true
          #          ports:
          #            - containerPort: 9898
          #              name: healthz
          #              protocol: TCP
          #          TODO make it configurable and build it for ppc64le
          #          livenessProbe:
          #            failureThreshold: 5
          #            httpGet:
          #              path: /healthz
          #              port: healthz
          #            initialDelaySeconds: 10
          #            timeoutSeconds: 3
          #            periodSeconds: 2
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: {{ $csiS3Properties.sidecars.kubeletPath }}/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /dev
              name: dev-dir
          ##TODO make it configurable and build it for ppc64le
      #        - name: liveness-probe
      #          volumeMounts:
      #            - mountPath: /csi
      #              name: socket-dir
      #          image: quay.io/k8scsi/livenessprobe:v1.1.0
      #          args:
      #            - --csi-address=/csi/csi.sock
      #            - --health-port=9898
      volumes:
        - hostPath:
            path: {{ $csiS3Properties.sidecars.kubeletPath }}/plugins/csi-s3
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: {{ $csiS3Properties.sidecars.kubeletPath }}/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: {{ $csiS3Properties.sidecars.kubeletPath }}/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
