# This YAML file contains attacher & csi driver API objects that are necessary
# to run external CSI attacher for H3

{{- $csiH3Properties := merge .Values $.Values.global}}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-controller-h3
  labels:
  {{- include "common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: "csi-controller-h3"
  replicas: 1
  selector:
    matchLabels:
      app: csi-controller-h3
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app: csi-controller-h3
    spec:
      {{- if or (.Values.priorityClassName) (.Values.global.priorityClassName) }}
      priorityClassName: {{ .Values.priorityClassName | default .Values.global.priorityClassName }}
      {{- end }}
      serviceAccountName: csi-controller-h3
      {{- if or (.Values.dockerRegistrySecret) (.Values.global.dockerRegistrySecret) }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecret | default .Values.global.dockerRegistrySecret }}
      {{- end}}
      containers:
        - name: csi-attacher
          {{- with $csiH3Properties.sidecars}}
          image: "{{ .baseRepo }}/{{ .images.externalAttacher.image }}:{{ .images.externalAttacher.tag }}"
          {{- end}}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          # imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: h3
          image: "{{ $csiH3Properties.baseRepo }}/{{ $csiH3Properties.csih3.image }}:{{ $csiH3Properties.csih3.tag }}"
          args :
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
          # imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /plugin
      volumes:
        - name: socket-dir
          emptyDir:
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
