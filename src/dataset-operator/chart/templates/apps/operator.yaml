{{- $datasetProperties := merge .Values $.Values.global}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dataset-operator
  labels:
  {{- include "common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: dataset-operator
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        name: dataset-operator
        {{- include "common.labels" . | nindent 8 }}
    spec:
      serviceAccountName: dataset-operator
      {{- if or (.Values.dockerRegistrySecret) (.Values.global.dockerRegistrySecret) }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecret | default .Values.global.dockerRegistrySecret }}
      {{- end}}
      initContainers:
        - name: generate-keys
          {{- with $datasetProperties}}
          image: "{{ .baseRepo }}/{{ .generatekeys.image }}:{{ .generatekeys.tag }}"
          {{- end}}
          imagePullPolicy: Always
          env:
            - name: DATASET_OPERATOR_NAMESPACE
              value: {{ .Release.Namespace }}
      containers:
        - name: dataset-operator
          # Replace this with the built image name
          {{- with $datasetProperties}}
          image: "{{ .baseRepo }}/{{ .datasetoperator.image }}:{{ .datasetoperator.tag }}"
          {{- end}}
          command:
            - /manager
          imagePullPolicy: Always
          ports:
            - containerPort: 9443
              name: webhook-api
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "dataset-operator"
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true
      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: webhook-server-tls
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-server
  labels:
  {{- include "common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: webhook-api
  selector:
    name: dataset-operator
    
