name: release

env:
  ACTIONS_STEP_DEBUG: true

on:
  push:
    tags:
      - '**'
jobs:
  package:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Datashim
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Generate short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set Git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@user.noreply.github.com"
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with: 
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

#      - name: Build and push Dataset operator image
#        run: |
#          cd src/dataset-operator
#          ./build_and_push_multiarch_dataset_operator.sh ${{ vars.REGISTRY_URL }} ${{ github.ref_name }}
#     - name: Build and push Generate Keys image 
#        run: |
#          cd src/generate-keys
#          ./build_and_push_multiarch_generate_keys.sh ${{ vars.REGISTRY_URL }} ${{ github.ref_name }}
      
#      - name: Build and push bundled CSI plugins
#        run: |
#          cd build-tools
#          make ARCH=amd64 COMMON_IMAGE_TAG=${{ steps.vars.outputs.sha_short }} build-csi-plugins
#          make ARCH=amd64 COMMON_IMAGE_TAG=${{ steps.vars.outputs.sha_short }} push-csi-plugins
#          make ARCH=arm64 COMMON_IMAGE_TAG=${{ steps.vars.outputs.sha_short }} build-csi-plugins
#          make ARCH=arm64 COMMON_IMAGE_TAG=${{ steps.vars.outputs.sha_short }} push-csi-plugins
#          make ARCH=ppc64le COMMON_IMAGE_TAG=${{ steps.vars.outputs.sha_short }} build-csi-plugins 
#          make ARCH=ppc64le COMMON_IMAGE_TAG=${{ steps.vars.outputs.sha_short }} push-csi-plugins 
#          make COMMON_IMAGE_TAG=${{ steps.vars.outputs.sha_short }}  push-multiarch-csi-plugins
#
      - name: Install Helm
        uses: azure/setup-helm@v3
      
      - name: Modify Helm values
        uses: mikefarah/yq@master
        with: 
          cmd: yq --inplace '
                    with (.dataset-operator-chart.datasetoperator.tag;
                        . = "${{ github.ref_name }}" ) |
                    with (.dataset-operator-chart.generatekeys.tag;
                        . = "${{ github.ref_name }}" ) | 
                    with (.csi-s3-chart.csis3.tag;
                        . = "${{ steps.vars.outputs.sha_short }}" ) |
                    with (.csi-nfs-chart.csinfs.tag;
                        . = "${{ steps.vars.outputs.sha_short }}" ) ' chart/values.yaml

      - name: Create Helm package
        run: |
          cd chart
          helm package --version ${{ github.ref_name }} -u -d ../.cr-release-packages .

      - name: Run chart releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: chart
          skip_packaging: true
      
      - name: Create a release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: true
          prerelease: true
          automatic_release_tag: "${{ github.ref_name }}"
          
          
        
        
          
